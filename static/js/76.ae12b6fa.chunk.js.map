{"version":3,"file":"static/js/76.ae12b6fa.chunk.js","mappings":"yNACA,EAA0B,sBAA1B,EAAuD,mBAAvD,EAAkF,oBAAlF,EAAoH,0BAApH,EAAqJ,mB,SC8CrJ,EA1Ca,WACX,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QAER,GAA4BE,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KAUA,OARAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAgBN,GACbO,MAAK,SAAAC,GACJJ,EAAUI,EAASC,KACpB,IACAC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,GACf,GAAE,CAACX,KAGF,gBAAKc,UAAWC,EAAhB,SACGZ,GACC,eAAIW,UAAWC,EAAf,SACGZ,EAAOa,KAAI,SAAAC,GACV,OACE,gBAAuBH,UAAWC,EAAlC,UACyB,OAAtBE,EAAKC,cACJ,gBAAKJ,UAAWC,EAAhB,gCAEA,gBACED,UAAWC,EACXI,IAAG,yCAAoCF,EAAKC,cAC5CE,IAAKH,EAAKI,QAId,uBAAIJ,EAAKK,eAAiBL,EAAKI,SAXxBJ,EAAKM,QAcjB,OAGH,iDAIP,C,+LC3CKC,EAAW,gCACXC,EAAU,mCAET,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACoBC,EAAAA,EAAAA,IAAA,UAClBH,EADkB,sCACoBC,IAFxC,cACGjB,EADH,yBAIIA,EAASoB,MAJb,kEAOA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA4B7B,GAA5B,uFACoB2B,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iBACDxB,EADC,oBACkByB,EADlB,oBADpB,cACGjB,EADH,yBAIIA,EAASoB,MAJb,kEAOA,SAAetB,EAAtB,+CAAO,OAAP,oBAAO,WAA+BN,GAA/B,uFACoB2B,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iBACDxB,EADC,4BAC0ByB,EAD1B,oBADpB,cACGjB,EADH,yBAIIA,EAASoB,MAJb,kEAOA,SAAeE,EAAtB,+CAAO,OAAP,oBAAO,WAA+B9B,GAA/B,uFACoB2B,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iBACDxB,EADC,4BAC0ByB,EAD1B,oBADpB,cACGjB,EADH,yBAIIA,EAASoB,MAJb,kEAOA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAAgCC,GAAhC,uFACoBL,EAAAA,EAAAA,IAAA,UAClBH,EADkB,gCACcC,EADd,iCAC8CO,IAFlE,cACGxB,EADH,yBAIIA,EAASoB,MAJb,kE","sources":["webpack://react-homework-template/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx","utils/API.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"Cast_wrapper__XmIBi\",\"item\":\"Cast_item__a0CDL\",\"image\":\"Cast_image__mOsuM\",\"placeholder\":\"Cast_placeholder__oyDTA\",\"list\":\"Cast_list__GlWio\"};","import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { getMovieCredits } from 'utils/API';\nimport css from './Cast.module.css';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n\n  const [result, setResult] = useState([]);\n\n  useEffect(() => {\n    getMovieCredits(movieId)\n      .then(response => {\n        setResult(response.cast);\n      })\n      .catch(error => console.log(error));\n  }, [movieId]);\n\n  return (\n    <div className={css.wrapper}>\n      {result ? (\n        <ul className={css.list}>\n          {result.map(item => {\n            return (\n              <li key={item.cast_id} className={css.item}>\n                {item.profile_path === null ? (\n                  <div className={css.placeholder}>No image found :(</div>\n                ) : (\n                  <img\n                    className={css.image}\n                    src={`https://image.tmdb.org/t/p/w200${item.profile_path}`}\n                    alt={item.name}\n                  />\n                )}\n\n                <p>{item.original_name || item.name}</p>\n              </li>\n            );\n          })}\n        </ul>\n      ) : (\n        <p>No information found</p>\n      )}\n    </div>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'a59dfea75e9e40e203f0819879862061';\n\nexport async function getTrendingMovies() {\n    const response = await axios.get(\n      `${BASE_URL}trending/movie/day?api_key=${API_KEY}`\n    );\n    return response.data;\n}\n\nexport async function getMovieById(movieId) {\n    const response = await axios.get(\n      `${BASE_URL}movie/${movieId}?api_key=${API_KEY}&language=en-US`\n    );\n    return response.data;\n}\n\nexport async function getMovieCredits(movieId) {\n    const response = await axios.get(\n      `${BASE_URL}movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n    );\n    return response.data;\n}\n\nexport async function getMovieReviews(movieId) {\n    const response = await axios.get(\n      `${BASE_URL}movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\n    );\n    return response.data;\n}\n\nexport async function getMoviesByQuery(query) {\n    const response = await axios.get(\n      `${BASE_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${query}`\n    );\n    return response.data;\n}\n"],"names":["movieId","useParams","useState","result","setResult","useEffect","getMovieCredits","then","response","cast","catch","error","console","log","className","css","map","item","profile_path","src","alt","name","original_name","cast_id","BASE_URL","API_KEY","getTrendingMovies","axios","data","getMovieById","getMovieReviews","getMoviesByQuery","query"],"sourceRoot":""}