{"version":3,"file":"static/js/729.7ce8a7f6.chunk.js","mappings":"4OAcA,EAdiB,SAAC,GAAc,IAAZA,EAAW,EAAXA,KACVC,EAAqDD,EAArDC,MAAOC,EAA8CF,EAA9CE,KAAMC,EAAwCH,EAAxCG,YAAaC,EAA2BJ,EAA3BI,aAAcC,EAAaL,EAAbK,SAChD,OACE,4BACE,gBAAKC,IAAG,yCAAoCH,GAAeI,IAAKN,KAChE,wBAAKA,GAASC,KACd,uBAAIE,KACJ,sCACA,uBAAIC,KACJ,qCAGL,ECmBD,EAzBqB,WAAO,IAAD,IACjBG,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,MACjB,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACMC,GAAeC,EAAAA,EAAAA,QAAM,oBAACN,EAASO,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,KAUpD,OARAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAaZ,GACVa,MAAK,SAAAC,GACJR,EAAUQ,EACX,IACAC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,GACf,GAAE,CAAChB,KAGF,4BACE,SAAC,KAAD,CAAMmB,GAAIZ,EAAaa,QAAvB,sBACA,SAAC,EAAD,CAAU5B,KAAMa,KAChB,SAAC,KAAD,CAAMc,GAAG,OAAT,mBACA,SAAC,KAAD,CAAMA,GAAG,UAAT,sBACA,SAAC,KAAD,MAGL,C,+LC3BKE,EAAW,gCACXC,EAAU,mCAET,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,6GAEoBC,EAAAA,EAAAA,IAAA,UAClBH,EADkB,sCACoBC,IAHxC,cAEGR,EAFH,yBAKIA,EAASW,MALb,gCAOHR,QAAQD,MAAR,MAPG,gFAWA,SAAeJ,EAAtB,+CAAO,OAAP,oBAAO,WAA4BZ,GAA5B,gGAEoBwB,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iBACDrB,EADC,oBACkBsB,EADlB,oBAFpB,cAEGR,EAFH,yBAKIA,EAASW,MALb,gCAOHR,QAAQD,MAAR,MAPG,gFAWA,SAAeU,EAAtB,+CAAO,OAAP,oBAAO,WAA+B1B,GAA/B,gGAEoBwB,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iBACDrB,EADC,4BAC0BsB,EAD1B,oBAFpB,cAEGR,EAFH,yBAKIA,EAASW,MALb,gCAOHR,QAAQD,MAAR,MAPG,gFAWA,SAAeW,EAAtB,+CAAO,OAAP,oBAAO,WAA+B3B,GAA/B,gGAEoBwB,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iBACDrB,EADC,4BAC0BsB,EAD1B,oBAFpB,cAEGR,EAFH,yBAKIA,EAASW,MALb,gCAOHR,QAAQD,MAAR,MAPG,gFAWA,SAAeY,EAAtB,+CAAO,OAAP,oBAAO,WAAgCC,GAAhC,gGAEoBL,EAAAA,EAAAA,IAAA,UAClBH,EADkB,gCACcC,EADd,iCAC8CO,IAHlE,cAEGf,EAFH,yBAKIA,EAASW,MALb,gCAOHR,QAAQD,MAAR,MAPG,gF","sources":["components/FilmCard/FilmCard.jsx","pages/MovieDetails/MovieDetails.jsx","utils/API.js"],"sourcesContent":["const FilmCard = ({ info }) => {\n  const { title, name, poster_path, release_date, overview } = info;\n  return (\n    <div>\n      <img src={`https://image.tmdb.org/t/p/w300${poster_path}`} alt={title} />\n      <h1>{title || name}</h1>\n      <p>{release_date}</p>\n      <h2>Overview</h2>\n      <p>{overview}</p>\n      <h2>Genres</h2>\n    </div>\n  );\n};\n\nexport default FilmCard;\n","import { useLocation, useParams } from 'react-router-dom';\nimport { useEffect, useRef, useState } from 'react';\nimport { Outlet, Link } from 'react-router-dom';\nimport { getMovieById } from 'utils/API';\nimport FilmCard from 'components/FilmCard/FilmCard';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const location = useLocation();\n  const [result, setResult] = useState([]);\n  const backLinkHref = useRef(location.state?.from ?? '/');\n\n  useEffect(() => {\n    getMovieById(movieId)\n      .then(response => {\n        setResult(response);\n      })\n      .catch(error => console.log(error));\n  }, [movieId]);\n\n  return (\n    <div>\n      <Link to={backLinkHref.current}>Go back</Link>\n      <FilmCard info={result}></FilmCard>\n      <Link to=\"cast\">Cast</Link>\n      <Link to=\"reviews\">Reviews</Link>\n      <Outlet></Outlet>\n    </div>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'a59dfea75e9e40e203f0819879862061';\n\nexport async function getTrendingMovies() {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}trending/movie/day?api_key=${API_KEY}`\n    );\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function getMovieById(movieId) {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}movie/${movieId}?api_key=${API_KEY}&language=en-US`\n    );\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function getMovieCredits(movieId) {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n    );\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function getMovieReviews(movieId) {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\n    );\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function getMoviesByQuery(query) {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${query}`\n    );\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n"],"names":["info","title","name","poster_path","release_date","overview","src","alt","movieId","useParams","location","useLocation","useState","result","setResult","backLinkHref","useRef","state","from","useEffect","getMovieById","then","response","catch","error","console","log","to","current","BASE_URL","API_KEY","getTrendingMovies","axios","data","getMovieCredits","getMovieReviews","getMoviesByQuery","query"],"sourceRoot":""}