{"version":3,"file":"static/js/729.5e064916.chunk.js","mappings":"4OAsBA,EAtBiB,SAAC,GAAc,IAAZA,EAAW,EAAXA,KACVC,EAA6DD,EAA7DC,MAAOC,EAAsDF,EAAtDE,KAAMC,EAAgDH,EAAhDG,YAAaC,EAAmCJ,EAAnCI,aAAcC,EAAqBL,EAArBK,SAAUC,EAAWN,EAAXM,OAE1D,OACE,4BACE,gBAAKC,IAAG,yCAAoCJ,GAAeK,IAAKP,EAAOA,MAAOA,KAC9E,wBAAKA,GAASC,KACd,uBAAIE,EAAaK,MAAM,EAAG,MAC1B,sCACA,uBAAIJ,KACJ,oCACA,wBACqB,IAAlBC,EAAOI,QACN,uCAEA,wBAAKJ,EAAOK,KAAI,qBAAGT,IAAH,IAAoBU,KAAK,YAKlD,ECqBD,EAnCqB,WAAO,IAAD,IACjBC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,MACjB,GAA4BC,EAAAA,EAAAA,UAAS,MAArC,eAAOC,EAAP,KAAeC,EAAf,KACMC,GAAeC,EAAAA,EAAAA,QAAM,oBAACN,EAASO,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,KAWpD,OATAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAaZ,GACVa,KAAKP,GACLQ,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,GAEf,GAAE,IAEHC,QAAQC,IAAIZ,IAGV,4BACE,SAAC,KAAD,CAAMa,GAAIX,EAAaY,QAAvB,sBACA,yBACId,GAGA,0BACE,SAAC,EAAD,CAAUlB,KAAMkB,OAHlB,0CAOJ,oDACA,SAAC,KAAD,CAAMa,GAAG,OAAT,mBACA,SAAC,KAAD,CAAMA,GAAG,UAAT,sBACA,SAAC,KAAD,MAGL,C,+LCrCKE,EAAW,gCACXC,EAAU,mCAET,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACoBC,EAAAA,EAAAA,IAAA,UAClBH,EADkB,sCACoBC,IAFxC,cACGG,EADH,yBAIIA,EAASC,MAJb,kEAOA,SAAeb,EAAtB,+CAAO,OAAP,oBAAO,WAA4BZ,GAA5B,uFACoBuB,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iBACDpB,EADC,oBACkBqB,EADlB,oBADpB,cACGG,EADH,yBAIIA,EAASC,MAJb,kEAOA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA+B1B,GAA/B,uFACoBuB,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iBACDpB,EADC,4BAC0BqB,EAD1B,oBADpB,cACGG,EADH,yBAIIA,EAASC,MAJb,kEAOA,SAAeE,EAAtB,+CAAO,OAAP,oBAAO,WAA+B3B,GAA/B,uFACoBuB,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iBACDpB,EADC,4BAC0BqB,EAD1B,oBADpB,cACGG,EADH,yBAIIA,EAASC,MAJb,kEAOA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAAgCC,GAAhC,uFACoBN,EAAAA,EAAAA,IAAA,UAClBH,EADkB,gCACcC,EADd,iCAC8CQ,IAFlE,cACGL,EADH,yBAIIA,EAASC,MAJb,kE","sources":["components/FilmCard/FilmCard.jsx","pages/MovieDetails/MovieDetails.jsx","utils/API.js"],"sourcesContent":["const FilmCard = ({ info }) => {\n  const { title, name, poster_path, release_date, overview, genres } = info;\n\n  return (\n    <div>\n      <img src={`https://image.tmdb.org/t/p/w300${poster_path}`} alt={title} title={title} />\n      <h1>{title || name}</h1>\n      <p>{release_date.slice(0, 4)}</p>\n      <h2>Overview</h2>\n      <p>{overview}</p>\n      <h2>Genres</h2>\n      <ul>\n        {genres.length === 0 ? (\n          <li>No genres</li>\n        ) : (\n          <li>{genres.map(({ name }) => name).join(', ')}</li>\n        )}\n      </ul>\n    </div>\n  );\n};\n\nexport default FilmCard;\n","import { useLocation, useParams } from 'react-router-dom';\nimport { useEffect, useRef, useState } from 'react';\nimport { Outlet, Link } from 'react-router-dom';\nimport { getMovieById } from 'utils/API';\nimport FilmCard from 'components/FilmCard/FilmCard';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const location = useLocation();\n  const [result, setResult] = useState(null);\n  const backLinkHref = useRef(location.state?.from ?? '/');\n\n  useEffect(() => {\n    getMovieById(movieId)\n      .then(setResult)\n      .catch(error => console.log(error));\n    // eslint-disable-next-line\n  }, []);\n\n  console.log(result);\n\n  return (\n    <div>\n      <Link to={backLinkHref.current}>Go back</Link>\n      <div>\n        {!result ? (\n          <h2>Loading...</h2>\n        ) : (\n          <div>\n            <FilmCard info={result} />\n          </div>\n        )}\n      </div>\n      <h2>Additional information</h2>\n      <Link to=\"cast\">Cast</Link>\n      <Link to=\"reviews\">Reviews</Link>\n      <Outlet></Outlet>\n    </div>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'a59dfea75e9e40e203f0819879862061';\n\nexport async function getTrendingMovies() {\n    const response = await axios.get(\n      `${BASE_URL}trending/movie/day?api_key=${API_KEY}`\n    );\n    return response.data;\n}\n\nexport async function getMovieById(movieId) {\n    const response = await axios.get(\n      `${BASE_URL}movie/${movieId}?api_key=${API_KEY}&language=en-US`\n    );\n    return response.data;\n}\n\nexport async function getMovieCredits(movieId) {\n    const response = await axios.get(\n      `${BASE_URL}movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n    );\n    return response.data;\n}\n\nexport async function getMovieReviews(movieId) {\n    const response = await axios.get(\n      `${BASE_URL}movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\n    );\n    return response.data;\n}\n\nexport async function getMoviesByQuery(query) {\n    const response = await axios.get(\n      `${BASE_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${query}`\n    );\n    return response.data;\n}\n"],"names":["info","title","name","poster_path","release_date","overview","genres","src","alt","slice","length","map","join","movieId","useParams","location","useLocation","useState","result","setResult","backLinkHref","useRef","state","from","useEffect","getMovieById","then","catch","error","console","log","to","current","BASE_URL","API_KEY","getTrendingMovies","axios","response","data","getMovieCredits","getMovieReviews","getMoviesByQuery","query"],"sourceRoot":""}