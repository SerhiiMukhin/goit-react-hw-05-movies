{"version":3,"file":"static/js/278.2f0a2ef1.chunk.js","mappings":"sMAiDA,UA7Ce,WAAO,IAAD,EACnB,GAAwCA,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACMC,GAAWC,EAAAA,EAAAA,MAEXC,EAAK,UAAGP,EAAaQ,IAAI,gBAApB,QAAgC,GAiB3C,OARAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAiBH,GACdI,MAAK,SAAAC,GACJR,EAAUQ,EAASC,QACpB,IACAC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,GACf,GAAE,CAACR,KAGF,4BACE,kBAAMW,SAjBW,SAAAC,GACnBA,EAAMC,iBACN,IAAMC,EAAOF,EAAMG,OACnBrB,EAAgB,CAAEM,MAAOY,EAAMG,OAAOf,MAAMgB,MAAMC,SAClDH,EAAKI,OACN,EAYG,WACE,kBAAOC,KAAK,OAAOC,KAAK,WACxB,mBAAQD,KAAK,SAAb,uBAES,KAAVnB,IACC,wBACGJ,EAAOyB,KAAI,SAAAC,GACV,OACE,yBACE,SAAC,KAAD,CAAMC,GAAE,UAAKD,EAAKE,IAAMC,MAAO,CAAEC,KAAM5B,GAAvC,SACGwB,EAAKK,OAASL,EAAKF,QAFfE,EAAKE,GAMjB,QAKV,C,+LC7CKI,EAAW,gCACXC,EAAU,mCAET,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACoBC,EAAAA,EAAAA,IAAA,UAClBH,EADkB,sCACoBC,IAFxC,cACGxB,EADH,yBAIIA,EAAS2B,MAJb,kEAOA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA4BC,GAA5B,uFACoBH,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iBACDM,EADC,oBACkBL,EADlB,oBADpB,cACGxB,EADH,yBAIIA,EAAS2B,MAJb,kEAOA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA+BD,GAA/B,uFACoBH,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iBACDM,EADC,4BAC0BL,EAD1B,oBADpB,cACGxB,EADH,yBAIIA,EAAS2B,MAJb,kEAOA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAA+BF,GAA/B,uFACoBH,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iBACDM,EADC,4BAC0BL,EAD1B,oBADpB,cACGxB,EADH,yBAIIA,EAAS2B,MAJb,kEAOA,SAAe7B,EAAtB,+CAAO,OAAP,oBAAO,WAAgCH,GAAhC,uFACoB+B,EAAAA,EAAAA,IAAA,UAClBH,EADkB,gCACcC,EADd,iCAC8C7B,IAFlE,cACGK,EADH,yBAIIA,EAAS2B,MAJb,kE","sources":["pages/Movies/Movies.jsx","utils/API.js"],"sourcesContent":["import { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport { getMoviesByQuery } from 'utils/API';\nimport { useState, useEffect } from 'react';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [result, setResult] = useState([]);\n  const location = useLocation();\n\n  const query = searchParams.get('query') ?? '';\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const form = event.target;\n    setSearchParams({ query: event.target.query.value.trim() });\n    form.reset();\n  };\n\n  useEffect(() => {\n    getMoviesByQuery(query)\n      .then(response => {\n        setResult(response.results);\n      })\n      .catch(error => console.log(error));\n  }, [query]);\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <input type=\"text\" name=\"query\" />\n        <button type=\"submit\">Submit</button>\n      </form>\n      {query !== '' && (\n        <ul>\n          {result.map(item => {\n            return (\n              <li key={item.id}>\n                <Link to={`${item.id}`} state={{ from: location }}>\n                  {item.title || item.name}\n                </Link>\n              </li>\n            );\n          })}\n        </ul>\n      )}\n    </div>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'a59dfea75e9e40e203f0819879862061';\n\nexport async function getTrendingMovies() {\n    const response = await axios.get(\n      `${BASE_URL}trending/movie/day?api_key=${API_KEY}`\n    );\n    return response.data;\n}\n\nexport async function getMovieById(movieId) {\n    const response = await axios.get(\n      `${BASE_URL}movie/${movieId}?api_key=${API_KEY}&language=en-US`\n    );\n    return response.data;\n}\n\nexport async function getMovieCredits(movieId) {\n    const response = await axios.get(\n      `${BASE_URL}movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n    );\n    return response.data;\n}\n\nexport async function getMovieReviews(movieId) {\n    const response = await axios.get(\n      `${BASE_URL}movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\n    );\n    return response.data;\n}\n\nexport async function getMoviesByQuery(query) {\n    const response = await axios.get(\n      `${BASE_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${query}`\n    );\n    return response.data;\n}\n"],"names":["useSearchParams","searchParams","setSearchParams","useState","result","setResult","location","useLocation","query","get","useEffect","getMoviesByQuery","then","response","results","catch","error","console","log","onSubmit","event","preventDefault","form","target","value","trim","reset","type","name","map","item","to","id","state","from","title","BASE_URL","API_KEY","getTrendingMovies","axios","data","getMovieById","movieId","getMovieCredits","getMovieReviews"],"sourceRoot":""}